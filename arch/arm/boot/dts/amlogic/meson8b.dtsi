/*
 * arch/arm/boot/dts/amlogic/meson8b.dtsi
 *
 * Copyright (C) 2017 Amlogic, Inc. All rights reserved.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
 * more details.
 *
 */

#include <dt-bindings/clock/meson8b-clkc.h>
#include <dt-bindings/gpio/meson8b-gpio.h>
#include <dt-bindings/reset/amlogic,meson8b-reset.h>
#include <dt-bindings/gpio/gpio.h>
#include "skeleton.dtsi"

/ {
	interrupt-parent = <&gic>;

	cpus {
		#address-cells = <1>;
		#size-cells = <0>;
		enable-method = "amlogic,meson8b-smp";

		cpu@200 {
			device_type = "cpu";
			compatible = "arm,cortex-a5";
			next-level-cache = <&L2>;
			reg = <0x200>;
		};

		cpu@201 {
			device_type = "cpu";
			compatible = "arm,cortex-a5";
			next-level-cache = <&L2>;
			reg = <0x1>;
		};

		cpu@202 {
			device_type = "cpu";
			compatible = "arm,cortex-a5";
			next-level-cache = <&L2>;
			reg = <0x2>;
		};

		cpu@203 {
			device_type = "cpu";
			compatible = "arm,cortex-a5";
			next-level-cache = <&L2>;
			reg = <0x3>;
		};
	};

	soc {
		compatible = "simple-bus";
		#address-cells = <1>;
		#size-cells = <1>;
		ranges;

		cpucfg@c4300000 {
			compatible = "amlogic,meson8b-cpuconfig";
			reg = <0xc4300000 0x1000>,
			      <0xd9000000 0x20000>;
		};

		L2: l2-cache-controller@c4200000 {
			compatible = "arm,pl310-cache";
			reg = <0xc4200000 0x1000>;
			arm,data-latency = <3 3 3>;
			arm,tag-latency = <2 2 2>;
			arm,filter-ranges = <0x100000 0xc0000000>;
			cache-unified;
			cache-level = <2>;
		};

		gic: interrupt-controller@c4301000 {
			compatible = "arm,cortex-a9-gic";
			reg = <0xc4301000 0x1000>,
			      <0xc4300100 0x0100>;
			interrupt-controller;
			#interrupt-cells = <3>;
		};

		reset: reset-controller@c1104404 {
			compatible = "amlogic,meson8b-reset";
			reg = <0xc1104404 0x20>;
			#reset-cells = <1>;
		};

		wdt: watchdog@c1109900 {
			compatible = "amlogic,meson8b-wdt";
			reg = <0xc1109900 0x8>;
			interrupts = <0 0 1>;
		};
		cpu_iomap {
			compatible = "amlogic, iomap";
			#address-cells = <1>;
			#size-cells = <1>;
			ranges;
			io_cbus_base {
				reg = <0xc1100000 0x100000>;
			};
			io_apb_base {
				reg = <0xd0000000 0x200000>;
			};
			io_aobus_base {
				reg = <0xc8100000 0x100000>;
			};
		};
		cpu_version{
				reg = <0xc1107d4c 4>,
					<0xc11081a8 4>,
					<0xd9040000 4>;
		};
		timer@c1109940 {
			compatible = "amlogic,meson6-timer";
			reg = <0xc1109940 0x18>;
			interrupts = <0 10 1>;
		};

		uart_AO: serial@c81004c0 {
			compatible = "amlogic, meson-uart";
			reg = <0xc81004c0 0x18>;
			interrupts = <0 90 1>;
			clocks = <&clkc CLKID_CLK81>;
			status = "disabled";
		};

		uart_A: serial@c11084c0 {
		compatible = "amlogic, meson-uart";
			reg = <0xc11084c0 0x18>;
			interrupts = <0 26 1>;
			clocks = <&clkc CLKID_CLK81>;
			status = "disabled";
		};

		uart_B: serial@c11084dc {
		compatible = "amlogic, meson-uart";
			reg = <0xc11084dc 0x18>;
			interrupts = <0 75 1>;
			clocks = <&clkc CLKID_CLK81>;
			status = "disabled";
		};

		uart_C: serial@c1108700 {
		compatible = "amlogic, meson-uart";
			reg = <0xc1108700 0x18>;
			interrupts = <0 93 1>;
			clocks = <&clkc CLKID_CLK81>;
			status = "disabled";
		};

		clkc: clock-controller@c1104000 {
			#clock-cells = <1>;
			compatible = "amlogic,meson8b-clkc";
			reg = <0xc1108000 0x4>, <0xc1104000 0x460>;
		};

		pwm_ab: pwm@8550 {
			compatible = "amlogic,meson8b-pwm";
			reg = <0xc1108550 0x10>;
			#pwm-cells = <3>;
			status = "disabled";
		};

		pwm_cd: pwm@8650 {
			compatible = "amlogic,meson8b-pwm";
			reg = <0xc1108650 0x10>;
			#pwm-cells = <3>;
			status = "disabled";
		};

		pwm_ef: pwm@86c0 {
			compatible = "amlogic,meson8b-pwm";
			reg = <0xc11086c0 0x10>;
			#pwm-cells = <3>;
			status = "disabled";
		};

		pinctrl_cbus: pinctrl@c1109880 {
			compatible = "amlogic,meson8b-cbus-pinctrl";
			#address-cells = <1>;
			#size-cells = <1>;
			ranges;

			gpio: banks@c11080b0 {
				reg = <0xc11080b0 0x28>,
				      <0xc11080e8 0x18>,
				      <0xc1108120 0x18>,
				      <0xc1108030 0x38>,
				      <0xc1109880 0x10>;
				interrupts = <0 64 1>,
					<0 65 1>,
					<0 66 1>,
					<0 67 1>,
					<0 68 1>,
					<0 69 1>,
					<0 70 1>,
					<0 71 1>;
				reg-names = "mux",
					"pull",
					"pull-enable",
					"gpio",
					"irq";
				gpio-controller;
				#gpio-cells = <2>;
				interrupt-controller;
				#interrupt-cells = <2>;
			};

			emmc_clk_cmd_pins:emmc_clk_cmd_pins {
				mux {
					groups = "sd_cmd_c",
						"sd_clk_c";
					function = "sd_c";
					input-enable;
					bias-pull-up;
				};
			};

			emmc_all_pins:emmc_all_pins {
				mux {
					groups = "sd_d0_c",
						"sd_d1_c",
						"sd_d2_c",
						"sd_d3_c",
						"sd_cmd_c",
						"sd_clk_c";
					function = "sd_c";
					input-enable;
					bias-pull-up;
				};
			};

			sd_clk_cmd_pins:sd_clk_cmd_pins{
				mux {
					groups = "sd_cmd_b",
						"sd_clk_b";
					function = "sd_b";
					input-enable;
					bias-pull-up;
				};
			};

			sd_1bit_pins:sd_1bit_pins{
				mux {
					groups = "sd_d1_b",
						"sd_d2_b",
						"sd_d3_b",
						"sd_cmd_b",
						"sd_clk_b";
					function = "sd_b";
					input-enable;
					bias-pull-up;
				};
			};

			sd_all_pins:sd_all_pins{
				mux {
					groups = "sd_d0_b",
						"sd_d1_b",
						"sd_d2_b",
						"sd_d3_b",
						"sd_cmd_b",
						"sd_clk_b";
					function = "sd_b";
					input-enable;
					bias-pull-up;
				};
			};

			sdio_clk_cmd_pins:sdio_clk_cmd_pins {
				mux {
					groups = "sd_clk_a",
						"sd_cmd_a";
					function = "sd_a";
					input-enable;
					bias-pull-up;
				};
			};

			sdio_all_pins:sdio_all_pins {
				mux {
					groups = "sd_d0_a",
						"sd_d1_a",
						"sd_d2_a",
						"sd_d3_a",
						"sd_clk_a",
						"sd_cmd_a";
					function = "sd_a";
					input-enable;
					bias-pull-up;
				};
			};

			sdhc_emmc_clk_cmd_pins:sdhc_emmc_clk_cmd_pins {
				mux {
					groups = "sdxc_clk_c",
						"sdxc_cmd_c";
					function = "sdxc_c";
					input-enable;
					bias-pull-up;
				};
			};

			sdhc_emmc_all_pins:sdhc_emmc_all_pins {
				mux {
					groups = "sdxc_d0_c",
						"sdxc_d13_c",
						"sdxc_d47_c",
						"sdxc_clk_c",
						"sdxc_cmd_c";
					function = "sdxc_c";
					input-enable;
					bias-pull-up;
				};
			};

			sdhc_sd_clk_cmd_pins:sdhc_sd_clk_cmd_pins {
				mux {
					groups = "sdxc_clk_b",
						"sdxc_cmd_b";
					function = "sdxc_b";
					input-enable;
					bias-pull-up;
				};
			};

			sdhc_sd_all_pins:sdhc_sd_all_pins {
				mux {
					groups = "sdxc_d0_b",
						"sdxc_d13_b",
						"sdxc_clk_b",
						"sdxc_cmd_b";
					function = "sdxc_b";
					input-enable;
					bias-pull-up;
				};
			};

			sdhc_sdio_clk_cmd_pins:sdhc_sdio_clk_cmd_pins {
				mux {
					groups = "sdxc_clk_a",
						"sdxc_cmd_a";
					function = "sdxc_a";
					input-enable;
					bias-pull-up;
				};
			};

			sdhc_sdio_all_pins:sdhc_sdio_all_pins {
				mux {
					groups = "sdxc_d0_1_a",
						"sdxc_d13_1_a",
						"sdxc_clk_a",
						"sdxc_cmd_a";
					function = "sdxc_a";
					input-enable;
					bias-pull-up;
				};
			};
		};

		pinctrl_aobus: pinctrl@c8100084 {
			compatible = "amlogic,meson8b-aobus-pinctrl";
			#address-cells = <1>;
			#size-cells = <1>;
			ranges;

			gpio_ao: ao-bank@c1108030 {
				reg = <0xc8100014 0x4>,
					  <0xc810002c 0x4>,
				      <0xc8100024 0x8>,
				      <0xc8100084 0x4>;
				interrupts = <0 200 1>,
					<0 201 1>;
				reg-names = "mux", "pull", "gpio", "irq";
				gpio-controller;
				#gpio-cells = <2>;
				interrupt-controller;
				#interrupt-cells = <2>;
			};

			uart_ao_a_pins: uart_ao_a {
				mux {
					groups = "uart_tx_ao_a", "uart_rx_ao_a";
					function = "uart_ao";
				};
			};
		};
dwc2_b {
		compatible = "amlogic,dwc2";
		device_name = "dwc2_b";
		reg = <0xC90C0000 0x40000>;
		interrupts = <0 31 4>;
		status = "okay";
		pl-periph-id = <1>; /** lm name */
		clock-src = "usb1"; /** clock src */
		port-id = <1>;   /** ref to mach/usb.h */
		port-type = <1>;	/** 0: otg, 1: host, 2: slave */
		port-speed = <0>; /** 0: default, 1: high, 2: full */
		port-config = <0>; /** 0: default */
		port-dma = <0>; /** 0: default, 1: single, 2: incr, 3: incr4, 4: incr8, 5: incr16, 6: disable*/
		port-id-mode = <1>; /** 0: hardware, 1: sw_host, 2: sw_slave*/
		phy-reg = <0xc1108820>;
		phy-reg-size = <0x20>;
		usb-fifo = <1024>;
		host-only-core = <1>;
		pmu-apply-power = <1>;
		cpu-type = "meson8";
		clocks = <&clkc CLKID_USB
					&clkc CLKID_USB1_DDR_BRIDGE
					&clkc CLKID_USB1>;
		clock-names = "usb_general",
						"usb1_to_ddr",
						"usb1";
	};

	dwc2_a {
		compatible = "amlogic,dwc2";
		device_name = "dwc2_a";
		reg = <0xC9040000 0x40000>;
		interrupts = <0 30 4>;
		status = "okay";
		pl-periph-id = <0>; /** lm name */
		clock-src = "usb0"; /** clock src */
		port-id = <0>;  /** ref to mach/usb.h */
		port-type = <0>;	/** 0: otg, 1: host, 2: slave */
		port-speed = <0>; /** 0: default, high, 1: full */
		port-config = <0>; /** 0: default */
		port-dma = <0>; /** 0: default, 1: single, 2: incr, 3: incr4, 4: incr8, 5: incr16, 6: disable*/
		port-id-mode = <0>; /** 0: hardware, 1: sw_host, 2: sw_slave*/
		gpio-vbus-power = "GPIODV_24";
		gpios = <&gpio       GPIODV_24       0>;
		gpio-work-mask	= <1>; /**0: work on pulldown,1:work on pullup*/
		phy-reg = <0xc1108800>;
		phy-reg-size = <0x20>;
		usb-fifo = <1024>;
		cpu-type = "meson8";
		clocks = <&clkc CLKID_USB
			&clkc CLKID_USB0_DDR_BRIDGE
			&clkc CLKID_USB0>;
		clock-names = "usb_general",
						"usb0_to_ddr",
						"usb0";
	};

	aml_tdes {
		compatible = "amlogic,des,tdes";
		dev_name = "aml_tdes_blkmv";
		status = "okay";
		interrupts = <0 36 1>;
		clocks = <&clkc CLKID_BLKMV>;
		clock-names = "blkmv";
	};

	aml_aes {
		compatible = "amlogic,aes";
		dev_name = "aml_aes_blkmv";
		status = "okay";
		interrupts = <0 36 1>;
		clocks = <&clkc CLKID_BLKMV>;
		clock-names = "blkmv";
	};

	};
}; /* end of / */
